{"version":3,"file":"static/js/924.acec5010.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/ContactList/ContactsList.styled.jsx","components/Contact/Contact.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","../node_modules/nanoid/index.browser.js","components/Filter/Filter.jsx","components/Form/Form.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  padding-top: 10px;\n  font-weight: bold;\n  font-size: 25px;\n  color: black;\n  gap: 10px;\n`;\n\nexport const LabelForm = styled.label``;\n\nexport const InputForm = styled.input`\n  width: 300px;\n  height: 20px;\n  border-radius: 4px;\n  margin-left: 5px;\n  font-size: 17px;\n  font-weight: bold;\n`;\n\nexport const ButtonForm = styled.button`\n  width: 150px;\n  height: 30px;\n  font-size: 18px;\n  font-weight: bold;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  color: black;\n  background-color: lightsteelblue;\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: flex-end;\n  width: 370px;\n  font-size: 20px;\n  padding-bottom: 20px;\n  pading: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const TextList = styled.p`\n  font-weight: bold;\n  color: black;\n`;\n\nexport const ButtonList = styled.button`\n  width: 90px;\n  height: 20px;\n  border-radius: 4px;\n  background-color: rgb(245, 122, 122);\n  color: black;\n  font-weight: bold;\n`;\n\nexport const ItemBox = styled.div`\n  display: flex;\n  width: 350px;\n  align-items: center;\n  justify-content: space-between;\n  gap: 20px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport {\n  TextList,\n  ButtonList,\n  ItemBox,\n} from 'components/ContactList/ContactsList.styled';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContacts(id));\n\n  return (\n    <ItemBox>\n      <TextList>\n        {name}: {number}\n      </TextList>\n      <ButtonList type=\"button\" onClick={handleDelete}>\n        Delete\n      </ButtonList>\n    </ItemBox>\n  );\n};\n","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectStatusFilter = state => state.filter.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { Contact } from 'components/Contact/Contact';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { List, ListItem } from './ContactsList.styled';\nimport {\n  selectContacts,\n  selectStatusFilter,\n  selectError,\n} from 'redux/contacts/selectors';\n\nexport function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectStatusFilter);\n  const error = useSelector(selectError);\n\n  const normalized = filter.toLocaleLowerCase();\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalized)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <List>\n      {error && <p>error</p>}\n      {filterContacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <Contact id={id} name={name} number={number} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterConteiner = styled.div`\n  margin-top: 50px;\n`;\n\nexport const FilterLabel = styled.label`\n  font-size: 20px;\n  color: black;\n  font-weight: bold;\n  margin-right: 5px;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const FilterInput = styled.input`\n  margin-left: 5px;\n  width: 190px;\n  height: 20px;\n  border-radius: 4px;\n  font-size: 17px;\n  font-weight: bold;\n`;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterLabel, FilterInput, FilterConteiner } from './Filter.styled';\nimport { selectStatusFilter } from 'redux/contacts/selectors';\nimport { setStatusFilter } from 'redux/contacts/slice';\nimport { nanoid } from 'nanoid';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n  const filterId = nanoid(3);\n\n  const handleFilterChange = evt =>\n    dispatch(setStatusFilter(evt.currentTarget.value));\n\n  return (\n    <FilterConteiner>\n      <FilterLabel htmlFor={filterId}>\n        Find contacts by name\n        <FilterInput\n          id={filterId}\n          type=\"text\"\n          value={filter}\n          onChange={handleFilterChange}\n        />\n      </FilterLabel>\n    </FilterConteiner>\n  );\n};\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { FormStyled, LabelForm, InputForm, ButtonForm } from './Form.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\n\nexport function Form() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameId = nanoid(3);\n\n  const handleChangeName = evt => {\n    setName(evt.target.value);\n  };\n\n  const handleChangeNumber = evt => {\n    setNumber(evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    dispatch(addContacts({ name, number }));\n\n    resetSubmit();\n  };\n\n  const resetSubmit = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <LabelForm htmlFor={nameId}>\n        Name\n        <InputForm\n          id={nameId}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </LabelForm>\n      <LabelForm htmlFor={nameId}>\n        Number\n        <InputForm\n          id={nameId}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </LabelForm>\n      <ButtonForm type=\"submit\">Add contact</ButtonForm>\n    </FormStyled>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ContactsConteiner = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 50px;\n`;\n\nexport const ContactsText = styled.h1`\n  font-weight: bold;\n  font-size: 40px;\n  color: black;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Form } from 'components/Form/Form';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactsConteiner, ContactsText } from './Contacts.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsConteiner>\n      <ContactsText>Your contacts</ContactsText>\n      <Form />\n      <div>{isLoading && <Loader />}</div>\n      <Filter />\n      <ContactList />\n    </ContactsConteiner>\n  );\n}\n"],"names":["FormStyled","styled","LabelForm","InputForm","ButtonForm","List","ListItem","TextList","ButtonList","ItemBox","Contact","id","name","number","dispatch","useDispatch","type","onClick","deleteContacts","selectContacts","state","contacts","selectStatusFilter","filter","selectIsLoading","isLoading","selectError","error","ContactList","useSelector","normalized","toLocaleLowerCase","filterContacts","contact","includes","useEffect","fetchContacts","map","FilterConteiner","FilterLabel","FilterInput","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","Filter","filterId","htmlFor","value","onChange","evt","setStatusFilter","currentTarget","Form","useState","setName","setNumber","nameId","resetSubmit","onSubmit","preventDefault","find","toLowerCase","alert","addContacts","target","pattern","title","required","ContactsConteiner","ContactsText","Contacts","Loader"],"sourceRoot":""}